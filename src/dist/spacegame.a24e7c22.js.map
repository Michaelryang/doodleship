{"version":3,"sources":["settings.ts","types.ts","bullet.ts","player.ts","asteroid.ts","explosion.ts","spacegame.ts","../../../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"spacegame.a24e7c22.js","sourceRoot":"..","sourcesContent":["// let worldWidth = 720;\r\n// let worldHeight = 1080;\r\n// let gameScale = 0.25;\r\n\r\n// let turnLeftKey = 'a';\r\n// let turnRightKey = 'd';\r\n\r\n// singleton\r\nexport class Settings\r\n{\r\n    private worldWidth = 1080;\r\n    private worldHeight = 720;\r\n    private gameScale = 0.5;\r\n    \r\n    private turnLeftKey = 'a';\r\n    private turnRightKey = 'd';\r\n    private accelerationKey = ' ';\r\n    private fireKey = 'Enter';\r\n\r\n    private playerMaxSpeed = 5; // max units per frame\r\n    private playerAcceleration = 0.04; // percentage per frame of max speed\r\n    private playerRotationSpeed = 4; // degrees per frame\r\n    private bulletFireInterval = 0.25; // in seconds\r\n\r\n    private bulletLifetime = 2; // in seconds\r\n    private bulletMaxSpeed = 15; // max units per frame\r\n\r\n    private static instance : Settings;\r\n\r\n    private NUM_BEGINNING_ASTEROIDS = 6;\r\n    private maxAsteroidSpeed = 1.5;\r\n    private minAsteroidSpeed = 0.5;\r\n    private maxAsteroidSize = 3;\r\n\r\n    private maxAsteroidRotationSpeed = 1;\r\n\r\n    public static getInstance(): Settings {\r\n        if (!Settings.instance) {\r\n            Settings.instance = new Settings();\r\n        }\r\n\r\n        return Settings.instance;\r\n    }\r\n\r\n    getWorldWidth = () : number => { return this.worldWidth; }\r\n    getWorldHeight = () : number => { return this.worldHeight; }\r\n    getGameScale = () : number => { return this.gameScale; }\r\n    getTurnLeftKey = () : string => { return this.turnLeftKey; }\r\n    getTurnRightKey = () : string => { return this.turnRightKey; }\r\n    getAccelerationKey = () : string => { return this.accelerationKey; }\r\n    getFireKey = () : string => { return this.fireKey; }\r\n    getPlayerMaxSpeed = () : number => { return this.playerMaxSpeed; }\r\n    getPlayerAcceleration = () : number => { return this.playerAcceleration; }\r\n    getPlayerRotationSpeed = () : number => { return this.playerRotationSpeed; }\r\n\r\n    getBulletFireInterval = () : number => { return this.bulletFireInterval; }\r\n    getBulletMaxSpeed = () : number => { return this.bulletMaxSpeed; }\r\n\r\n    getBulletLifeTime = () : number => { return this.bulletLifetime; }\r\n\r\n    getNumBeginningAsteroids = () : number => { return this.NUM_BEGINNING_ASTEROIDS; }\r\n    getMaxAsteroidSpeed = () : number => { return this.maxAsteroidSpeed; }\r\n    getMinAsteroidSpeed = () : number => { return this.minAsteroidSpeed; }\r\n    getMaxAsteroidSize = () : number => { return this.maxAsteroidSize; }\r\n    getMaxAsteroidRotationSpeed = () : number => { return this.maxAsteroidRotationSpeed; }\r\n}\r\n\r\n\r\n\r\n","import { Settings } from \"./settings\";\r\n\r\nexport enum WorldObjectShape\r\n{\r\n    Circle,\r\n    Rectangle,\r\n}\r\n\r\nexport const toRadians = (degrees) => { return degrees * Math.PI / 180;}\r\nexport const toDegrees = (radians) => { return radians / Math.PI * 180;}\r\nexport const clamp = (num, min, max) => Math.min(Math.max(num, min), max);\r\nexport const wrap = (num, min, max) =>\r\n{\r\n    let range = max - min;\r\n    if ( num < min )\r\n    {\r\n        num += range;\r\n    }\r\n\r\n    if ( num > max )\r\n    {\r\n        num -= range;\r\n    }\r\n\r\n    return num;\r\n}\r\n// takes two vectors to define a rectangle and chooses a random vector within the rectangle\r\nexport const getRandomVector = (min : Vector2, max : Vector2) =>\r\n{\r\n    let minX = Math.min(min.x, max.x);\r\n    let minY = Math.min(min.y, max.y);\r\n    let maxX = Math.max(min.x, max.x);\r\n    let maxY = Math.max(min.y, max.y);\r\n\r\n    return new Vector2(\r\n        Math.random() * (maxX - minX) + minX,\r\n        Math.random() * (maxY - minY) + minY,\r\n    )\r\n}\r\n\r\nexport const getUnitDirectionVectorFromRadians = (radians : number) =>\r\n{\r\n    return new Vector2(\r\n        Math.cos(radians), \r\n        Math.sin(radians));\r\n}\r\n\r\nexport const vectorDistanceSquared = ( v1 : Vector2, v2 : Vector2 ) =>\r\n{\r\n    return (v1.x - v2.x) * (v1.x - v2.x) + (v1.y - v2.y) * (v1.y - v2.y);\r\n}\r\n\r\n\r\nexport const isPointColliding = (point : Vector2, worldObject: WorldObject) : boolean =>\r\n{\r\n    if ( worldObject.getShape() == WorldObjectShape.Circle)\r\n    {\r\n        let radius = worldObject.getRadius();\r\n        let objectPosition = worldObject.getPosition();\r\n\r\n        return vectorDistanceSquared(point, objectPosition) < radius * radius;\r\n    }\r\n    else if ( worldObject.getShape() == WorldObjectShape.Rectangle)\r\n    {\r\n        let width = worldObject.getWidth();\r\n        let height = worldObject.getHeight();\r\n        let objectPosition = worldObject.getPosition();\r\n\r\n        let minX = objectPosition.x - width/2;\r\n        let maxX = objectPosition.x + width/2;\r\n\r\n        let minY = objectPosition.y - width/2;\r\n        let maxY = objectPosition.y + width/2;\r\n        \r\n        return ( \r\n            point.x <= maxX && point.x >= minX &&\r\n            point.y <= maxY && point.y >= minY );\r\n    }\r\n    \r\n    return false;\r\n}\r\n\r\n// export const isObjectColliding = (object1: WorldObject, object2: WorldObject) : boolean =>\r\n// {\r\n//     if ( object1.getShape() == WorldObjectShape.Circle)\r\n//     {\r\n//     }\r\n// }\r\n\r\nexport const isOutOfBounds = (worldPos : Vector2) : boolean =>\r\n{\r\n    return ( \r\n        worldPos.x < 0 || worldPos.x > Settings.getInstance().getWorldWidth() ||\r\n        worldPos.y < 0 || worldPos.y > Settings.getInstance().getWorldHeight());\r\n}\r\n\r\nconst worldWidth = Settings.getInstance().getWorldWidth();\r\nconst worldHeight = Settings.getInstance().getWorldHeight();\r\n\r\nexport class Vector2 \r\n{\r\n    x : number;\r\n    y : number;\r\n\r\n    constructor();\r\n    constructor( x : number, y : number );\r\n    constructor( v : Vector2 );\r\n    constructor(...arr: any[])\r\n    {\r\n        this.x = 0;\r\n        this.y = 0;\r\n\r\n        if ( arr.length == 1 )\r\n        {\r\n            this.x = arr[0].x;\r\n            this.y = arr[0].y;\r\n        }\r\n\r\n        if ( arr.length == 2)\r\n        {\r\n            this.x = arr[0];\r\n            this.y = arr[1];\r\n        }\r\n    }\r\n\r\n    add = (vector : Vector2) : void =>\r\n    {\r\n        this.x += vector.x;\r\n        this.y += vector.y;\r\n    } \r\n\r\n    subtract = (vector : Vector2) : void =>\r\n    {\r\n        this.x -= vector.x;\r\n        this.y -= vector.y;\r\n    }\r\n\r\n    multiplyScalar = (scalar : number ) : void =>\r\n    {\r\n        this.x *= scalar;\r\n        this.y *= scalar;\r\n    }\r\n\r\n    getSquaredMagnitude = () : number =>\r\n    {\r\n        return this.x * this.x + this.y * this.y;\r\n    }\r\n\r\n    // deep copy\r\n    getVector = () : Vector2 =>\r\n    {\r\n        return new Vector2(this.x, this.y);\r\n    }\r\n}\r\n\r\nexport abstract class WorldObject \r\n{\r\n    protected sprite : HTMLImageElement = new Image();\r\n    protected worldPositionCenter : Vector2 = new Vector2(); // \r\n    protected worldPositionTopLeftCorner : Vector2 = new Vector2(); // \r\n    protected velocity : Vector2 = new Vector2(); // world units per second;\r\n    protected rotation : number; // in degrees\r\n    protected width : number = 0;\r\n    protected height : number = 0;\r\n    protected scale : number;\r\n    protected initialRotationOffset : number;\r\n    protected lifeCycleActive = true;\r\n\r\n    protected shape : WorldObjectShape;\r\n\r\n    constructor (\r\n        spriteImageURL : string, \r\n        worldPos? : Vector2, \r\n        worldVelocity? : Vector2, \r\n        worldRotation? : number,\r\n        spriteScale? : number,\r\n        rotationOffset? : number,\r\n        objectShape? : WorldObjectShape )\r\n    {\r\n        (typeof worldPos !== 'undefined') ? \r\n        this.worldPositionCenter = worldPos : \r\n        this.worldPositionCenter = new Vector2(worldWidth / 2.0, worldHeight / 2.0);\r\n\r\n        (typeof worldVelocity !== 'undefined') ? \r\n        this.velocity = worldVelocity : \r\n        this.velocity = new Vector2(0, 0);\r\n\r\n        (typeof worldRotation !== 'undefined') ? \r\n        this.rotation = worldRotation : \r\n        this.rotation = 0;\r\n\r\n        (typeof spriteScale !== 'undefined') ? \r\n        this.scale = spriteScale :\r\n        this.scale = 1.0;\r\n\r\n        (typeof rotationOffset !== 'undefined') ? \r\n        this.initialRotationOffset = rotationOffset :\r\n        this.initialRotationOffset = 0.0;\r\n\r\n        this.sprite.src = spriteImageURL;\r\n        this.sprite.addEventListener('load', () => {\r\n            // Access the width and height after the image has loaded\r\n            this.width = this.sprite.naturalWidth * this.scale;\r\n            this.height = this.sprite.naturalHeight * this.scale;\r\n          \r\n            // Use the width and height\r\n            console.log('Width:', this.width);\r\n            console.log('Height:', this.height);\r\n\r\n            this.worldPositionTopLeftCorner = new Vector2(\r\n                this.worldPositionCenter.x - this.width/2,\r\n                this.worldPositionCenter.y - this.height/2);    \r\n          });\r\n\r\n\r\n        (typeof objectShape !== 'undefined') ? \r\n        this.shape = objectShape:\r\n        this.shape = WorldObjectShape.Rectangle;\r\n\r\n        this.lifeCycleActive = true;\r\n\r\n    }\r\n\r\n    isLifeCycleActive = () : boolean => { return this.lifeCycleActive; }\r\n    getShape = () : WorldObjectShape => { return this.shape; } \r\n    getRadius = () : number => { return this.width/2; }\r\n    getWidth = () : number => { return this.width; }\r\n    getHeight = () : number => { return this.width; }\r\n    getPosition = () : Vector2 => { return this.worldPositionCenter; }\r\n    endLifeCycle = () => { this.lifeCycleActive = false; }\r\n\r\n    abstract update(): void;\r\n\r\n    translate = (translationVector : Vector2) : void =>\r\n    {\r\n        this.worldPositionCenter.add(translationVector);\r\n        this.worldPositionTopLeftCorner.add(translationVector);\r\n    }\r\n\r\n    render = (canvas : HTMLCanvasElement) : void =>\r\n    {\r\n        // console.log(\"rendering worldobject:\\n\" + \r\n        // this.worldPositionTopLeftCorner.x + \" \" + this.worldPositionTopLeftCorner.y + \"\\n\" +\r\n        // this.width + \" \" + this.height + \"\\n\" + \r\n        // this.worldPositionCenter.x + \" \" + this.worldPositionCenter.y);\r\n        let ctx = canvas.getContext(\"2d\");\r\n        ctx?.save();\r\n\r\n        //ctx?.translate(this.worldPositionCenter.x, this.worldPositionCenter.y);\r\n        ctx?.translate(this.worldPositionCenter.x, this.worldPositionCenter.y);\r\n        ctx?.rotate(this.rotation * Math.PI / 180);\r\n        ctx?.drawImage(this.sprite, \r\n            -this.width/2, -this.height/2, \r\n            this.width, this.height);\r\n        //ctx?.translate(-this.worldPositionCenter.x, -this.worldPositionCenter.y);\r\n        ctx?.restore();\r\n    }\r\n}\r\n","import { WorldObject, isOutOfBounds, wrap } from './types.js'\r\nimport { Vector2 } from './types.js'\r\nimport { Settings } from './settings.js';\r\nimport { clamp } from './types.js';\r\nimport { toRadians } from './types.js';\r\n\r\n//import playerImage from './assets/asteroid1.png'\r\nimport bulletImage from './assets/bullet.png';\r\n\r\nexport class Bullet extends WorldObject\r\n{\r\n    lifeTime = Settings.getInstance().getBulletLifeTime();\r\n    maxSpeed = Settings.getInstance().getBulletMaxSpeed();\r\n\r\n    constructor(\r\n        worldPos? : Vector2,\r\n        worldVelocity? : Vector2, \r\n        worldRotation? : number,\r\n        spriteScale? : number)\r\n    {\r\n        super(bulletImage, worldPos, worldVelocity, worldRotation, spriteScale, 270);\r\n    }\r\n\r\n    update = () : void =>\r\n    {\r\n        //console.log(\"lifetime \" + this.lifeTime + \"active: \" + this.lifeCycleActive);\r\n        this.lifeTime -= 1/60;\r\n\r\n        if ( this.lifeTime < 0 )\r\n        {\r\n            this.lifeCycleActive = false;\r\n        }\r\n\r\n        let translateVector = this.velocity.getVector();\r\n        translateVector.multiplyScalar(this.maxSpeed);\r\n        this.translate(translateVector);\r\n\r\n        if ( isOutOfBounds(this.worldPositionCenter))\r\n        {\r\n            this.worldPositionCenter.x = wrap(this.worldPositionCenter.x, 0, Settings.getInstance().getWorldWidth());\r\n            this.worldPositionCenter.y = wrap(this.worldPositionCenter.y, 0, Settings.getInstance().getWorldHeight());\r\n        }\r\n    }\r\n}\r\n","import { WorldObject, getUnitDirectionVectorFromRadians, isOutOfBounds, wrap } from './types.js'\r\nimport { Vector2 } from './types.js'\r\nimport { Settings } from './settings.js';\r\nimport { clamp } from './types.js';\r\nimport { toRadians } from './types.js';\r\nimport { Bullet } from './bullet.js';\r\n\r\n//import playerImage from './assets/asteroid1.png'\r\nimport playerImage from './assets/player.png';\r\n\r\n\r\n\r\n// const width = Settings.getInstance().getWorldWidth();\r\n// const height = Settings.getInstance().getWorldHeight();\r\nconst turnLeftKey = Settings.getInstance().getTurnLeftKey();\r\nconst turnRightKey = Settings.getInstance().getTurnRightKey();\r\nconst accelerationKey = Settings.getInstance().getAccelerationKey();\r\nconst fireKey = Settings.getInstance().getFireKey();\r\n\r\nexport class Player extends WorldObject\r\n{\r\n    isTurningLeft = false;\r\n    isTurningRight = false;\r\n    \r\n    isAccelerating = false;\r\n    speedMultiplier = 0.0; // this is a multiplier of the velocity vector\r\n    maxSpeed = Settings.getInstance().getPlayerMaxSpeed();\r\n    acceleration = Settings.getInstance().getPlayerAcceleration();\r\n\r\n    isFiring = false;\r\n    canFireBullet = false;\r\n    bulletFireInterval = Settings.getInstance().getBulletFireInterval();\r\n    bulletFireTimer = 0.0; // in seconds\r\n    \r\n    constructor(\r\n        worldPos? : Vector2,\r\n        worldVelocity? : Vector2, \r\n        worldRotation? : number,\r\n        spriteScale? : number)\r\n    {\r\n        console.log(\"listeners\");\r\n        addEventListener('keydown', (e) => {this.keyPressed(e)} )\r\n        addEventListener('keyup', (e) => {this.keyReleased(e)}); \r\n\r\n        super(playerImage, worldPos, worldVelocity, worldRotation, spriteScale, 270);\r\n    }\r\n\r\n    keyPressed(e : KeyboardEvent) : void\r\n    {\r\n        //console.log(\"(e as KeyboardEvent).key: \" + (e as KeyboardEvent).key);\r\n        //console.log(\"fireKey: \" + fireKey); \r\n\r\n        if ((e as KeyboardEvent).key === turnLeftKey || \r\n            (e as KeyboardEvent).key === turnLeftKey.toUpperCase()) \r\n        {\r\n            if ( !this.isTurningLeft)\r\n            {\r\n                this.isTurningLeft = true;\r\n                //console.log(\"left key pressed\");\r\n            }\r\n        }\r\n\r\n        if ((e as KeyboardEvent).key === turnRightKey || \r\n            (e as KeyboardEvent).key === turnRightKey.toUpperCase()) \r\n        {\r\n            if ( !this.isTurningRight)\r\n            {\r\n                this.isTurningRight = true;\r\n                //console.log(\"right key pressed\");\r\n            }\r\n        }\r\n\r\n        if ((e as KeyboardEvent).key === accelerationKey || \r\n            (e as KeyboardEvent).key === accelerationKey.toUpperCase()) \r\n        {\r\n            if ( !this.isAccelerating)\r\n            {\r\n                this.isAccelerating = true;\r\n                //console.log(\"right key pressed\");\r\n            }\r\n        }\r\n\r\n        if ((e as KeyboardEvent).key === fireKey || \r\n            (e as KeyboardEvent).key === fireKey.toUpperCase()) \r\n        {\r\n            if ( !this.isFiring)\r\n            {\r\n                this.isFiring = true;\r\n                //console.log(\"fire key pressed\");\r\n            }\r\n        }\r\n    }\r\n\r\n    keyReleased(e : KeyboardEvent) : void\r\n    {\r\n        if ((e as KeyboardEvent).key === turnLeftKey || \r\n            (e as KeyboardEvent).key === turnLeftKey.toUpperCase()) \r\n        {\r\n            this.isTurningLeft = false;\r\n            //console.log(\"left key released\");\r\n        }\r\n\r\n        if ((e as KeyboardEvent).key === turnRightKey || \r\n            (e as KeyboardEvent).key === turnRightKey.toUpperCase()) \r\n        {\r\n            this.isTurningRight = false;      \r\n            //console.log(\"right key released\");\r\n        }\r\n\r\n        if ((e as KeyboardEvent).key === accelerationKey || \r\n            (e as KeyboardEvent).key === accelerationKey.toUpperCase()) \r\n        {\r\n            this.isAccelerating = false;      \r\n            //console.log(\"right key released\");\r\n        }\r\n\r\n        if ((e as KeyboardEvent).key === fireKey || \r\n            (e as KeyboardEvent).key === fireKey.toUpperCase()) \r\n        {\r\n            this.isFiring = false;      \r\n            //console.log(\"right key released\");\r\n        }\r\n    }\r\n\r\n    tryFireBullet = () : Bullet | null =>\r\n    {\r\n        if ( this.canFireBullet)\r\n        {\r\n            console.log(\"bullet fired\");\r\n            this.canFireBullet = false;\r\n            this.bulletFireTimer = 0.0;\r\n            return new Bullet(this.worldPositionCenter.getVector(), \r\n            this.velocity.getVector(), this.rotation, this.scale)\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    update = () : void =>\r\n    {\r\n        if ( this.isTurningLeft)\r\n        {\r\n            this.rotation -= Settings.getInstance().getPlayerRotationSpeed();\r\n        }\r\n\r\n        if ( this.isTurningRight)\r\n        {\r\n            this.rotation += Settings.getInstance().getPlayerRotationSpeed();\r\n        }\r\n\r\n        this.rotation = wrap(this.rotation, 0, 360);\r\n        \r\n        if ( this.isAccelerating )\r\n        {\r\n            this.speedMultiplier += this.acceleration;\r\n        }\r\n        else\r\n        {\r\n            this.speedMultiplier -= this.acceleration;\r\n        }\r\n\r\n        if ( this.isFiring)\r\n        {\r\n            this.bulletFireTimer += 1.0/60.0;\r\n            //console.log(\"bullet timer\" + this.bulletFireTimer);\r\n\r\n            if ( this.bulletFireTimer > this.bulletFireInterval)\r\n            {\r\n                this.canFireBullet = true;\r\n            }\r\n        }\r\n\r\n        this.speedMultiplier = clamp(this.speedMultiplier, 0, 1.0);\r\n        this.velocity = getUnitDirectionVectorFromRadians(toRadians(wrap(this.rotation + this.initialRotationOffset, 0, 360)));\r\n        \r\n        //console.log(\"velocity: \" + this.velocity.x + \" \" + this.velocity.y);\r\n\r\n        let translateVector = new Vector2(this.velocity.getVector());\r\n        translateVector.multiplyScalar(this.speedMultiplier * this.maxSpeed);\r\n\r\n        //console.log(\"translateVector: \" + translateVector.x + \" \" + translateVector.y);\r\n        // vector is a unit vector in the direction of rotation.\r\n\r\n        this.translate(translateVector);\r\n\r\n        if ( isOutOfBounds(this.worldPositionCenter))\r\n        {\r\n            this.worldPositionCenter.x = wrap(this.worldPositionCenter.x, 0, Settings.getInstance().getWorldWidth());\r\n            this.worldPositionCenter.y = wrap(this.worldPositionCenter.y, 0, Settings.getInstance().getWorldHeight());\r\n        }\r\n    }\r\n}","import { Vector2, WorldObject, WorldObjectShape, getRandomVector, getUnitDirectionVectorFromRadians, isOutOfBounds, toRadians, wrap } from \"./types\";\r\n\r\nimport asteroidImage1 from './assets/asteroid1.png';\r\nimport asteroidImage2 from './assets/asteroid2.png';\r\nimport asteroidImage3 from './assets/asteroid3.png';\r\nimport { Settings } from \"./settings\";\r\n\r\nlet asteroidImages : string[] = [\r\n    asteroidImage1,\r\n    asteroidImage2,\r\n    asteroidImage3,]\r\n\r\nexport class AsteroidFactory\r\n{\r\n    worldPosTopLeft = new Vector2(0, 0);\r\n    worldPosBottomRight = new Vector2(\r\n        Settings.getInstance().getWorldWidth(),\r\n        Settings.getInstance().getWorldHeight());\r\n\r\n    createAsteroid = (size? : number, worldPos? : Vector2) : Asteroid =>\r\n    {\r\n        let asteroidImageIndex = Math.floor(Math.random() * asteroidImages.length);\r\n        let newWorldPos : Vector2;\r\n\r\n        (typeof worldPos !== 'undefined') ? \r\n        newWorldPos = worldPos :\r\n        newWorldPos = getRandomVector(this.worldPosTopLeft, this.worldPosBottomRight);\r\n\r\n\r\n        let newSize : number;\r\n        (typeof size !== 'undefined') ? \r\n        newSize = size :\r\n        newSize = Settings.getInstance().getMaxAsteroidSize();\r\n        \r\n        console.log(\"newWorldPos: \", newWorldPos);\r\n\r\n        let worldRotation = Math.floor(Math.random() * 360);\r\n        let rotationOffset = 0;\r\n        let worldVelocity = getUnitDirectionVectorFromRadians(toRadians(wrap(worldRotation + rotationOffset, 0, 360)));\r\n\r\n        return new Asteroid(\r\n            asteroidImages[asteroidImageIndex],\r\n            newWorldPos,\r\n            worldVelocity,\r\n            worldRotation,\r\n            Settings.getInstance().getGameScale() * (newSize/Settings.getInstance().getMaxAsteroidSize()),\r\n            rotationOffset,\r\n            WorldObjectShape.Circle,\r\n            newSize\r\n        )\r\n    }\r\n}\r\n\r\nexport class Asteroid extends WorldObject\r\n{\r\n    speed : number; \r\n    size : number; \r\n    rotationSpeed : number;\r\n\r\n    constructor(\r\n        spriteImageURL : string,\r\n        worldPos? : Vector2, \r\n        worldVelocity? : Vector2, \r\n        worldRotation? : number,\r\n        spriteScale? : number,\r\n        rotationOffset? : number,\r\n        objectShape? : WorldObjectShape,\r\n        size? : number )\r\n    {\r\n        super(spriteImageURL, worldPos, worldVelocity, worldRotation, spriteScale, rotationOffset, objectShape);\r\n    \r\n        let maxSpeed = Settings.getInstance().getMaxAsteroidSpeed();\r\n        let minSpeed = Settings.getInstance().getMinAsteroidSpeed();\r\n\r\n        this.speed = Math.random() * (maxSpeed - minSpeed) + minSpeed;\r\n        console.log(\"constructing asteroid with speed: \" + this.speed);\r\n        (typeof size !== 'undefined') ? \r\n        this.size = size :\r\n        this.size = Settings.getInstance().getMaxAsteroidSize();\r\n\r\n        this.rotationSpeed = Math.random() * Settings.getInstance().getMaxAsteroidRotationSpeed() - 2.0 * Settings.getInstance().getMaxAsteroidRotationSpeed();\r\n    }\r\n    \r\n    splitAsteroid = () : Asteroid[] =>\r\n    {\r\n        let asteroids : Asteroid[] = [];\r\n        this.endLifeCycle();\r\n        if ( this.size > 1 )\r\n        {\r\n            console.log(\"random 1: \" + Math.random());\r\n            console.log(\"random 2: \" + Math.random());\r\n\r\n            let asteroidFactory = new AsteroidFactory();\r\n\r\n            let newPosMin = new Vector2(this.getPosition());\r\n            newPosMin.subtract(new Vector2(this.getWidth()/2, this.getHeight()/2));\r\n            let newPosMax = new Vector2(this.getPosition());\r\n            newPosMax.add(new Vector2(this.getWidth()/2, this.getHeight()/2));\r\n\r\n            asteroids.push(asteroidFactory.createAsteroid(this.size - 1, \r\n                getRandomVector(newPosMin, newPosMax)));\r\n            asteroids.push(asteroidFactory.createAsteroid(this.size - 1, \r\n                getRandomVector(newPosMin, newPosMax)));\r\n            }\r\n        return asteroids;\r\n    }\r\n\r\n    update = () : void => \r\n    {\r\n        this.rotation += this.rotationSpeed;\r\n\r\n        let translateVector = this.velocity.getVector();\r\n        translateVector.multiplyScalar(this.speed);\r\n        this.translate(translateVector);\r\n\r\n        if ( isOutOfBounds(this.worldPositionCenter))\r\n        {\r\n            this.worldPositionCenter.x = wrap(this.worldPositionCenter.x, 0, Settings.getInstance().getWorldWidth());\r\n            this.worldPositionCenter.y = wrap(this.worldPositionCenter.y, 0, Settings.getInstance().getWorldHeight());\r\n        }\r\n    }\r\n}","import { Vector2, WorldObject, WorldObjectShape } from \"./types\";\r\n\r\nimport explosionImage1 from './assets/explosion1.png';\r\nimport explosionImage2 from './assets/explosion2.png';\r\nimport { Settings } from \"./settings\";\r\n\r\nlet explosionImages : string[] = [\r\n    explosionImage1,\r\n    explosionImage2,]\r\n\r\nexport class ExplosionFactory\r\n{\r\n    createExplosion(worldPos : Vector2, size : number)\r\n    {\r\n        let explosionImageIndex = Math.floor(Math.random() * explosionImages.length);\r\n\r\n        return new Explosion(\r\n            explosionImages[explosionImageIndex],\r\n            worldPos,\r\n            new Vector2(0, 0),\r\n            Math.floor(Math.random() * 360),\r\n            1.5*Settings.getInstance().getGameScale() * (size/Settings.getInstance().getMaxAsteroidSize()),\r\n            0,\r\n            WorldObjectShape.Circle\r\n        )\r\n    }\r\n}\r\n\r\nexport class Explosion extends WorldObject\r\n{\r\n    lifeTime : number; // in seconds;\r\n\r\n    constructor(\r\n        spriteImageURL : string,\r\n        worldPos? : Vector2, \r\n        worldVelocity? : Vector2, \r\n        worldRotation? : number,\r\n        spriteScale? : number,\r\n        rotationOffset? : number,\r\n        objectShape? : WorldObjectShape\r\n        )\r\n    {\r\n        super(spriteImageURL, worldPos, worldVelocity, worldRotation, spriteScale, rotationOffset, objectShape);\r\n    \r\n        this.lifeTime = 0.6;\r\n    }\r\n\r\n    update = () : void =>\r\n    {\r\n        this.lifeTime -= 1.0/60.0;\r\n        if ( this.lifeTime < 0 )\r\n        {\r\n            this.endLifeCycle();\r\n        }\r\n    }\r\n}","import { Vector2, WorldObject, isPointColliding } from './types.js'\r\nimport { Player } from './player.js'\r\nimport { Settings } from './settings.js';\r\nimport { Bullet } from './bullet.js';\r\nimport { AsteroidFactory, Asteroid } from './asteroid.js';\r\nimport { ExplosionFactory } from './explosion.js';\r\n\r\nconst width = Settings.getInstance().getWorldWidth();\r\nconst height = Settings.getInstance().getWorldHeight();\r\nconst scale = Settings.getInstance().getGameScale();\r\n\r\n\r\nclass SpaceGame\r\n{\r\n    deltaTime = 0;\r\n    currentTimeStamp = 0;\r\n    previousTimeStamp = 0;\r\n    canvas : HTMLCanvasElement;\r\n    ctx : CanvasRenderingContext2D;\r\n\r\n    player : Player;\r\n    //bullets : Bullet[] = [];\r\n    asteroidFactory : AsteroidFactory = new AsteroidFactory();\r\n    explosionFactory : ExplosionFactory = new ExplosionFactory();\r\n    worldObjects : WorldObject[] = [];\r\n\r\n    constructor()\r\n    {\r\n        this.player = new Player(new Vector2(width/2, height/2), new Vector2(), 0.0, scale);\r\n        this.canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\r\n        this.ctx = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n        this.worldObjects.push(this.player);\r\n    }\r\n    \r\n    begin = () : void =>\r\n    {\r\n        this.previousTimeStamp = Date.now();\r\n        this.currentTimeStamp = Date.now();\r\n        window.requestAnimationFrame(this.tick);\r\n\r\n        for ( let x = 0; x < Settings.getInstance().getNumBeginningAsteroids(); ++x)\r\n        {\r\n            this.worldObjects.push(this.asteroidFactory.createAsteroid());\r\n        }\r\n\r\n        addEventListener('mousedown', (e) => {\r\n            this.getCursorPosition(e);\r\n        })\r\n    }\r\n\r\n    update = () : void =>\r\n    {\r\n        //console.log(\"update called\\ntimestamp: \" + this.currentTimeStamp + \"\\nframe time: \" + this.deltaTime );\r\n        this.ctx.fillStyle = \"black\";\r\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n    \r\n        // this.ctx.strokeStyle = \"lime\";\r\n        // this.ctx.beginPath();\r\n        // this.ctx.moveTo(0, height/2);\r\n        // this.ctx.lineTo(width, height/2);\r\n        // this.ctx.stroke();\r\n\r\n        // this.ctx.beginPath();\r\n        // this.ctx.moveTo(width/2, 0);\r\n        // this.ctx.lineTo(width/2, height);\r\n        // this.ctx.stroke(); \r\n        //console.log(\"draw line\");\r\n\r\n        // create\r\n        let bullet = this.player.tryFireBullet();\r\n\r\n        if ( bullet != null)\r\n        {\r\n            console.log(\"bullet added\");\r\n            this.worldObjects.push(bullet);\r\n        }\r\n\r\n        // update\r\n        for ( let x = 0; x < this.worldObjects.length; ++x )\r\n        {\r\n            this.worldObjects[x].update();\r\n        }\r\n\r\n        // check collisions\r\n        for ( let x = this.worldObjects.length - 1; x >=0; --x )\r\n        {\r\n            if ( this.worldObjects[x] instanceof Bullet)\r\n            {\r\n                for ( let y = this.worldObjects.length - 1; y >=0; --y )\r\n                {\r\n                    if ( this.worldObjects[y] instanceof Asteroid)\r\n                    {\r\n                        if ( isPointColliding(this.worldObjects[x].getPosition(), this.worldObjects[y]))\r\n                        {\r\n                            this.worldObjects[x].endLifeCycle();\r\n                            let newExplosion = this.explosionFactory.createExplosion(\r\n                                (this.worldObjects[y] as Asteroid).getPosition(),\r\n                                (this.worldObjects[y] as Asteroid).size);\r\n                            let newAsteroids : Asteroid[] = (this.worldObjects[y] as Asteroid).splitAsteroid();\r\n                            \r\n                            for ( let z = 0; z < newAsteroids.length; ++z)\r\n                            {\r\n                                this.worldObjects.push(newAsteroids[z]);\r\n                            }\r\n\r\n                            this.worldObjects.push(newExplosion);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        console.log(this.worldObjects.length);\r\n        // delete\r\n        for ( let x = this.worldObjects.length - 1; x >=0; --x )\r\n        {\r\n            if ( !this.worldObjects[x].isLifeCycleActive())\r\n            {\r\n                console.log(\"delete\");\r\n                this.worldObjects.splice(x, 1);\r\n            }\r\n        }\r\n        \r\n        // render\r\n        for ( let x = 0; x < this.worldObjects.length; ++x )\r\n        {\r\n            this.worldObjects[x].render(this.canvas);\r\n        }\r\n    }\r\n\r\n    tick = () : void =>\r\n    {\r\n        this.currentTimeStamp = Date.now();\r\n        this.deltaTime = (this.currentTimeStamp - this.previousTimeStamp) / 1000.0;\r\n        this.previousTimeStamp = this.currentTimeStamp;\r\n      \r\n        this.update();\r\n      \r\n        window.requestAnimationFrame(this.tick);\r\n    }\r\n\r\n    getCursorPosition(event) {\r\n        const rect = this.canvas.getBoundingClientRect();\r\n        const x = event.clientX - rect.left;\r\n        const y = event.clientY - rect.top;\r\n        console.log(\"x: \" + x + \" y: \" + y);\r\n    }\r\n    \r\n    \r\n\r\n    \r\n}\r\n\r\nlet game = new SpaceGame();\r\ngame.begin();","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}